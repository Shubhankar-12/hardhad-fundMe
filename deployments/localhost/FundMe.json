{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToamountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x64b3a9fdc2de680f5eac6f26a88b630f7d5c097d66f0b72d58a012f88073eb55",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1186314",
    "logsBloom": "0x
    "blockHash": "0x3727f340b1cd73b48ed82e87dd547b1e11a812a0fea253f92e811ac37ce676fb",
    "transactionHash": "0x64b3a9fdc2de680f5eac6f26a88b630f7d5c097d66f0b72d58a012f88073eb55",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1186314",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7802e3c714c4237908f3675373de4be7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToamountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Shubh Shubhankar\",\"details\":\"This implements the price feeds as a library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo crowd funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./PriceConverter.sol\\\";\\nerror FundMe__NotOwner();\\n\\n/**@title A contract for crowd funding\\n * @author Shubh Shubhankar\\n * @notice This contract is to demo crowd funding\\n * @dev This implements the price feeds as a library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MIN_USD = 50 * 10**18;\\n\\n    mapping(address => uint256) public s_addressToamountFunded;\\n    AggregatorV3Interface public s_priceFeed;\\n    address[] public s_funders;\\n    address public immutable i_owner;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner,\\\"Sender isn't the Owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToamountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress) public view returns (uint256)\\n    {\\n        return s_addressToamountFunded[fundingAddress];\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToamountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // bool sendSuccess=payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send failed!\\\");\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders=s_funders;\\n        for (uint i = 0; i < funders.length; i++) {\\n            address funder=funders[i];\\n            s_addressToamountFunded[funder]=0;\\n        }\\n        s_funders=new address[](0);\\n        (bool success,)=i_owner.call{value:address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n}\\n\",\"keccak256\":\"0x9e2193d67edd52aa3dc12958a08c5b8628b90e65219e264ace3a9792bba76641\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n    \\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        // ABI\\n        // Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (,int256 answer,,,)=priceFeed.latestRoundData();\\n        return uint256(answer * 10**10);\\n    }\\n    function getVersion(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice=getPrice(priceFeed);\\n        uint256 ethInUSD=(ethPrice*ethAmount)/(10**18);\\n        return ethInUSD;\\n    }\\n}\",\"keccak256\":\"0x80090140aeebb29181a4d88bb2e7d235b8a6f6fd5092eb5f5d60036488064c92\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620015a1380380620015a183398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161141a6200018760003960008181610576015281816107f70152818161084701528181610a3d0152610b1d015261141a6000f3fe6080604052600436106100c65760003560e01c806354861af71161007f578063b60d428811610059578063b60d428814610284578063be2693f01461028e578063d7b4750c14610298578063dba6335f146102d5576100d5565b806354861af7146101f1578063893d20e81461022e5780639e87a5cd14610259576100d5565b80630343fb25146100df5780630d8e6e2c1461011c5780630ec3b02714610147578063150c27a514610172578063213dbea2146101af5780633ccfd60b146101da576100d5565b366100d5576100d3610300565b005b6100dd610300565b005b3480156100eb57600080fd5b5061010660048036038101906101019190610d25565b61043a565b6040516101139190610d6b565b60405180910390f35b34801561012857600080fd5b50610131610482565b60405161013e9190610d6b565b60405180910390f35b34801561015357600080fd5b5061015c610529565b6040516101699190610de5565b60405180910390f35b34801561017e57600080fd5b5061019960048036038101906101949190610d25565b61054f565b6040516101a69190610d6b565b60405180910390f35b3480156101bb57600080fd5b506101c4610567565b6040516101d19190610d6b565b60405180910390f35b3480156101e657600080fd5b506101ef610574565b005b3480156101fd57600080fd5b5061021860048036038101906102139190610e2c565b6107b4565b6040516102259190610e68565b60405180910390f35b34801561023a57600080fd5b506102436107f3565b6040516102509190610e68565b60405180910390f35b34801561026557600080fd5b5061026e61081b565b60405161027b9190610de5565b60405180910390f35b61028c610300565b005b610296610845565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190610e2c565b610ad3565b6040516102cc9190610e68565b60405180910390f35b3480156102e157600080fd5b506102ea610b1b565b6040516102f79190610e68565b60405180910390f35b6802b5e3af16b188000061033f600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610b3f90919063ffffffff16565b1015610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037790610ee0565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104319190610f2f565b92505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ec57600080fd5b505afa158015610500573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105249190610f9a565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156106a45760006002828154811061061f5761061e610fc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061069c90610ff6565b9150506105fc565b50600067ffffffffffffffff8111156106c0576106bf61103f565b5b6040519080825280602002602001820160405280156106ee5781602001602082028036833780820191505090505b5060029080519060200190610704929190610c1b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161072b9061109f565b60006040518083038185875af1925050503d8060008114610768576040519150601f19603f3d011682016040523d82523d6000602084013e61076d565b606091505b50509050806107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a890611100565b60405180910390fd5b50565b600281815481106107c457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ca576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600280548060200260200160405190810160405280929190818152602001828054801561094e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610904575b5050505050905060005b81518110156109d857600082828151811061097657610975610fc7565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806109d090610ff6565b915050610958565b50600067ffffffffffffffff8111156109f4576109f361103f565b5b604051908082528060200260200182016040528015610a225781602001602082028036833780820191505090505b5060029080519060200190610a38929190610c1b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610a7f9061109f565b60006040518083038185875af1925050503d8060008114610abc576040519150601f19603f3d011682016040523d82523d6000602084013e610ac1565b606091505b5050905080610acf57600080fd5b5050565b600060028281548110610ae957610ae8610fc7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610b4b83610b7b565b90506000670de0b6b3a76400008583610b649190611120565b610b6e91906111a9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610bc457600080fd5b505afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611252565b5050509150506402540be40081610c1391906112cd565b915050919050565b828054828255906000526020600020908101928215610c94579160200282015b82811115610c935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c3b565b5b509050610ca19190610ca5565b5090565b5b80821115610cbe576000816000905550600101610ca6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cf282610cc7565b9050919050565b610d0281610ce7565b8114610d0d57600080fd5b50565b600081359050610d1f81610cf9565b92915050565b600060208284031215610d3b57610d3a610cc2565b5b6000610d4984828501610d10565b91505092915050565b6000819050919050565b610d6581610d52565b82525050565b6000602082019050610d806000830184610d5c565b92915050565b6000819050919050565b6000610dab610da6610da184610cc7565b610d86565b610cc7565b9050919050565b6000610dbd82610d90565b9050919050565b6000610dcf82610db2565b9050919050565b610ddf81610dc4565b82525050565b6000602082019050610dfa6000830184610dd6565b92915050565b610e0981610d52565b8114610e1457600080fd5b50565b600081359050610e2681610e00565b92915050565b600060208284031215610e4257610e41610cc2565b5b6000610e5084828501610e17565b91505092915050565b610e6281610ce7565b82525050565b6000602082019050610e7d6000830184610e59565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610eca601b83610e83565b9150610ed582610e94565b602082019050919050565b60006020820190508181036000830152610ef981610ebd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3a82610d52565b9150610f4583610d52565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f7a57610f79610f00565b5b828201905092915050565b600081519050610f9481610e00565b92915050565b600060208284031215610fb057610faf610cc2565b5b6000610fbe84828501610f85565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061100182610d52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561103457611033610f00565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061108960008361106e565b915061109482611079565b600082019050919050565b60006110aa8261107c565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b60006110ea600c83610e83565b91506110f5826110b4565b602082019050919050565b60006020820190508181036000830152611119816110dd565b9050919050565b600061112b82610d52565b915061113683610d52565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561116f5761116e610f00565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111b482610d52565b91506111bf83610d52565b9250826111cf576111ce61117a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b6111f9816111da565b811461120457600080fd5b50565b600081519050611216816111f0565b92915050565b6000819050919050565b61122f8161121c565b811461123a57600080fd5b50565b60008151905061124c81611226565b92915050565b600080600080600060a0868803121561126e5761126d610cc2565b5b600061127c88828901611207565b955050602061128d8882890161123d565b945050604061129e88828901610f85565b93505060606112af88828901610f85565b92505060806112c088828901611207565b9150509295509295909350565b60006112d88261121c565b91506112e38361121c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561132257611321610f00565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561135f5761135e610f00565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561139c5761139b610f00565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156113d9576113d8610f00565b5b82820290509291505056fea2646970667358221220c5fbbc7b49ceb1310ef7933199084fd3c3f4e2f49fe3f5b910980f21a2bda01f64736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Shubh Shubhankar",
    "details": "This implements the price feeds as a library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo crowd funding",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToamountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}